@model ProductoDTO
@{
    ViewData["Title"] = "Detalle del Producto";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@section Styles {
    <link rel="stylesheet" href="~/css/detalleProducto.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/productoCard.css" asp-append-version="true" />
}

<div class="product-detail">
    <div class="main-info">
        <div class="detail-image">
            <button class="fav-btn"><i class="fas fa-heart"></i></button>

            <img src="@Model.Imagen" alt="@Model.Nombre">
        </div>
        <div class="detail-info">
            <h2 class="detail-title">@Model.Nombre</h2>
            <p class="detail-price">$@Model.Precio?.ToString("N2", new System.Globalization.CultureInfo("es-AR"))</p>

            <div class="detail-options">
                <div>
                    <label for="size">Talle</label>
                    <select id="size" name="talle">
                        @foreach (var v in Model.Variantes.Select(v => v.Talle.Nombre).Distinct())
                        {
                            <option value="@v">@v</option>
                        }
                    </select>
                </div>
                <div>
                    <label for="color">Color</label>
                    <select id="color" name="color">
                        @foreach (var v in Model.Variantes.Select(v => v.Color.Nombre).Distinct())
                        {
                            <option value="@v">@v</option>
                        }
                    </select>
                </div>
            </div>

            <div class="detail-buttons">
                <button class="btn primary" id="add-to-cart">Agregar al carrito</button>
                <button class="btn secondary">Comprar ahora</button>
            </div>

            <div class="detail-description">
                <h4>Descripción</h4>
                <p>@Model.Descripcion</p>
                <p><strong>Categoría:</strong> @Model.Categoria?.Nombre</p>
                <p><strong>Local:</strong> @Model.Local?.Nombre</p>
            </div>
        </div>
    </div>

    <!-- Productos similares -->
    <div class="related-wrapper">
        <div class="related-section">
            <div class="section-header">
                <h3>Productos similares</h3>
                <a href="#">Ver más</a>
            </div>
            @{
                var productosSimilares = ViewBag.ProductosSimilares as List<ProductoDTO>;
            }

            @if (productosSimilares != null && productosSimilares.Any())
            {
                <div class="cards-wrapper">
                    <button class="arrow left similares"><i class="fa-solid fa-chevron-left"></i></button>
                    <div class="cards-container carruselSimilares">
                        @foreach (var p in productosSimilares)
                        {
                            <div class="card">@Html.Partial("_ProductoCard", p)</div>
                        }
                    </div>
                    <button class="arrow right similares"><i class="fa-solid fa-chevron-right"></i></button>
                </div>
            }
            else
            {
                <p>No hay productos similares.</p>
            }
        </div>

    </div>

    <!-- Productos del mismo local -->
    <div class="related-section">
        <div class="section-header">
            <h3>Productos de @Model.Local?.Nombre</h3>
            <a href="#">Ver más</a>
        </div>
        <div class="grid">

            @{
                var productosDelLocal = ViewBag.ProductosDelLocal as List<ProductoDTO>;
            }
            @if (productosDelLocal != null && productosDelLocal.Any())
            {
                foreach (var p in productosDelLocal)
                {
                    @Html.Partial("_ProductoCard", p)
                }
            }
            else
            {
                <p>No hay productos del mismo local.</p>
            }

        </div>
    </div>
</div>
@section Scripts {
    <script>
        const variantes = @Html.Raw(System.Text.Json.JsonSerializer.Serialize(Model.Variantes));

        const producto = {
            id: @Model.Id,
            nombre: "@Model.Nombre",
            imagen: "@Model.Imagen",
            precio: @Model.Precio
        };

        function obtenerVarianteId(talle, color) {
            return variantes.find(v =>
                v.Talle?.Nombre.toLowerCase() === talle.toLowerCase() &&
                v.Color?.Nombre.toLowerCase() === color.toLowerCase()
            )?.Id ?? null;
        }

        document.addEventListener('DOMContentLoaded', () => {
            const btnAgregar = document.getElementById("add-to-cart");
            if (!btnAgregar) return;

            btnAgregar.addEventListener("click", () => {
                const talla = document.getElementById("size").value;
                const color = document.getElementById("color").value;

                if (!talla || !color) {
                    alert("Seleccioná talle y color");
                    return;
                }

                const varianteId = obtenerVarianteId(talla, color);
                if (!varianteId) {
                    alert("La variante seleccionada no es válida.");
                    return;
                }

                const existente = cart.find(p => p.idVariante === varianteId);
                if (existente) {
                    existente.cantidad++;
                } else {
                    cart.push({
                        idVariante: varianteId,
                        productoId: producto.id,
                        nombre: producto.nombre,
                        imagen: producto.imagen,
                        color,
                        talla,
                        precio: producto.precio,
                        cantidad: 1
                    });
                }

                guardarCarrito();
                renderCart();
            });
        });
    </script>
}


